{"version":3,"sources":["app/util/helpers.ts","app/components/AuthProviderButton.tsx","shims/firebase-init.ts","app/components/NotFound.tsx","app/components/Hero.tsx","app/auth-providers/Facebook.tsx","app/auth-providers/Google.tsx","shims/google-signin-web.ts","app/auth-providers/Apple.tsx","app/components/AppSettings.ts","index.js","shims/firebase-auth-web.ts","app/signed-in/Stack.tsx","shims/firebase-analytics-web.ts","app/translations/index.ts","app/translations/en.ts","app/translations/es.ts","app/theme.ts","luna-app/App.tsx","app/signed-in/Profile.tsx","app/components/AuthProvider.tsx","shims/react-native-fbsdk-next-web.ts","shims/react-native-apple-authentication-web.ts","app/signed-in/Settings.tsx","app/signed-out/Stack.tsx","app/signed-out/CreateAccount.tsx","app/signed-out/ForgotPassword.tsx","app/signed-out/PhoneSignIn.tsx","app/auth-providers/Phone.tsx","app/signed-out/SignIn.tsx","app/auth-providers/EmailPassword.tsx","utils/icons.js","app/App.tsx"],"names":["user","providerID","providers","getProviders","isProvider","includes","isOnlyProvider","length","variant","title","providerTitles","providerNames","SIGN_IN","LINK","UNLINK","providerData","map","provider","providerId","getSocialColor","type","style","onPress","loading","children","Button","styles","button","icon","name","color","size","mode","dark","StyleSheet","create","marginVertical","width","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","appSettings","useAppSettings","linkTo","useLinkTo","detailsContainer","Text","sectionTitle","t","spacer","flex","alignContent","justifyContent","alignItems","paddingHorizontal","fontSize","fontWeight","height","absolute","position","top","right","bottom","left","fadedImage","backgroundColor","image","source","uri","PROVIDER_ID","useState","setLoading","useContext","UserContext","Alert","useAlerts","getProviderButtonTitle","unlink","reload","LoginManager","logInWithPermissions","isCancelled","alert","text","AccessToken","getCurrentAccessToken","result","Error","accessToken","credential","auth","FacebookAuthProvider","linkWithCredential","signInWithCredential","message","GoogleSignin","hasPlayServices","signIn","getTokens","idToken","GoogleAuthProvider","error","code","statusCodes","SIGN_IN_CANCELLED","IN_PROGRESS","PLAY_SERVICES_NOT_AVAILABLE","console","info","useEffect","configure","scopes","webClientId","require","GoogleSigninImpl","log","options","JSON","stringify","SIGN_IN_REQUIRED","appleButton","margin","Platform","OS","appleAuth","performRequest","requestedOperation","AppleRequestOperation","LOGIN","requestedScopes","AppleRequestScope","EMAIL","FULL_NAME","appleAuthRequestResponse","identityToken","nonce","AppleAuthProvider","AppleButton","cornerRadius","buttonStyle","Style","WHITE","buttonType","Type","handleApple","fallbackLanguageLocale","languageTag","isRTL","languageLocale","setLanguageLocale","listening","setListening","colorScheme","configureI18n","useCallback","i18n","translations","locale","fallbacks","defaultLocale","substring","languageCode","setLanguageCode","missingTranslation","param","otherParam","logEvent","i18n_key","translation","default","listener","bestAvailable","findBestAvailableLanguage","Object","keys","I18nManager","forceRTL","addEventListener","key","config","currentTheme","defaultTheme","darkTheme","AppRegistry","registerComponent","appName","App","runApplication","rootTag","document","getElementById","Stack","createStackNavigator","TopTabs","createMaterialTopTabNavigator","ProfileStack","Navigator","initialRouteName","Screen","component","Profile","headerShown","Settings","NotFound","insets","useSafeAreaInsets","screenOptions","tabBarStyle","paddingTop","GettingStarted","analytics","en","english","es","spanish","Success","OK","forgotPassword","createAnAccount","phoneSignIn","phoneSignInTitle","home","PageNotFoundText","gettingStarted","userInfo","settings","createAccountError","createAccountPasswordsDifferent","createAccountInstructions","emailLabel","passwordLabel","createAccountPasswordConfirmLabel","passwordsDoNotMatch","createAccountCreating","createAccountCreate","forgotPasswordInstructions","forgotPasswordLabel","forgotPasswordError","forgotPasswordSending","forgotPasswordSend","phoneVerificationCode","phoneVerificationConfirm","phoneVerificationCountryInstructions","phoneVerificationNumberInstructions","phoneVerificationNumberLabel","phoneVerificationNumberSubmit","signInSigningIn","signInSignIn","profileLastSignIn","userUpdateError","userEmailVerify","userEmailVerification","userEmailVerificationInstructions1","userEmailVerificationInstructions2","userEmailVerificationBanner","userEmailVerifyTitle","userEmailVerificationSuccess","userEmailVerificationFailure","userEmailVerificationVerifyButton","userDisplayLabel","userNameDisplayLabel","userNameDisplayInstructions","userNameDisplaySave","userNameDisplayUpdatedTitle","userNameDisplayUpdateMessage","userPasswordUpdateLabel","userPasswordInstructions","userPasswordCurrent","userPasswordNew","userPasswordConfirm","userPasswordUpdate","userSignOut","googleAuthErrorTitle","googleAuthCancelled","googleAuthInProgress","googleAuthPlayServices","googleAuthConfigError","facebookAuthErrorTitle","facebookAuthCancelled","facebookAuthErrorMessage","appleAuthErrorTitle","appleAuthErrorMessage","unknownError","PaperDarkTheme","NavigationDarkTheme","colors","primary","PaperDefaultTheme","NavigationDefaultTheme","Section","isDarkMode","sectionContainer","Colors","white","black","sectionDescription","light","backgroundStyle","darker","lighter","contentInsetAdjustmentBehavior","Header","highlight","ReloadInstructions","DebugInstructions","LearnMoreLinks","Tab","TopTabNavigator","accentColor","ligher","primaryColor","tabBarLabelStyle","tabBarIndicatorStyle","marginTop","SafeAreaProvider","NavigationContainer","linking","prefixes","screens","Details","Linking","Home","documentTitle","formatter","route","appJson","displayName","container","content","profile","paddingVertical","avatar","borderWidth","elevation","flexDirection","padding","fab","center","theme","useTheme","photoURL","Avatar","Image","label","toUpperCase","email","borderColor","background","Headline","emailVerified","Title","phoneNumber","Subheading","metadata","lastSignInTime","Caption","format","surface","active","FAB","providerMap","password","facebook","google","phone","inactive","opacity","onSurface","maxWidth","input","alignSelf","divider","currentUser","signingOut","setSigningOut","savingName","setSavingName","setDisplayName","help","setHelp","savingPassword","setSavingPassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","updatingUser","setUpdatingUser","signOut","updateProfile","dialogText","signInWithEmailAndPassword","updatePassword","Banner","visible","actions","updateEmailVerifyStatus","sendEmailVerification","then","Paragraph","TextInput","value","onChangeText","autoComplete","disabled","Divider","secureTextEntry","HelperText","SignIn","CreateAccount","ForgotPassword","PhoneSignIn","setEmail","setPassword","confirm","setConfirm","createUserWithEmailAndPassword","keyboardType","autoCapitalize","autoCorrect","autoFocus","handleCreate","sendPasswordResetEmail","attemptReset","backdrop","phoneCountry","borderRadius","phoneCountryCode","marginLeft","paragraph","marginBottom","picker","submit","confirmationRef","useRef","number","setNumber","verification","setVerification","countryCode","setCountryCode","country","setCountry","setVisible","signInWithPhoneNumber","current","bind","Fragment","containerButtonStyle","primaryColorVariant","onBackgroundTextColor","excludeCountries","onSelect","newCountry","cca2","callingCode","withFlag","withCountryNameButton","withCallingCode","preferredCountries","modalProps","onClose","onOpen","parsed","AsYouType","parsePhoneNumberFromString","isValid","hairlineWidth","signinButton","form","textAlign","maskTheme","placeholder","accent","attemptSignIn","IconsCSS","AntDesign_ttf","Entypo_ttf","EvilIcons_ttf","Feather_ttf","FontAwesome_ttf","Fontisto_ttf","Foundation_ttf","Ionicons_ttf","MaterialIcons_ttf","MaterialCommunityIcons_ttf","Octicons_ttf","Zocial_ttf","SimpleLineIcons_ttf","createElement","styleSheet","cssText","appendChild","createTextNode","head","createContext","loadingContainer","padded","initializing","setInitializing","listenUser","setListenUser","setUser","authListener","onAuthStateChanged","userListener","onIdTokenChanged","waiting","setTimeout","ActivityIndicator","Provider","initialMetrics","initialWindowMetrics","AlertsProvider","User","UserProfile","UserSettings"],"mappings":"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","file":"static/js/main.03b33208.chunk.js","sourcesContent":["import {FirebaseAuthTypes} from '@react-native-firebase/auth';\n\ntype ProviderID = 'google.com' | 'facebook.com' | 'apple.com';\n\nconst providerNames = {\n  'google.com': 'Google',\n  'facebook.com': 'Facebook',\n  'apple.com': 'Apple',\n};\n\nconst providerTitles: {[key: string]: string} = {\n  SIGN_IN: 'Sign in with',\n  LINK: 'Link',\n  UNLINK: 'Unlink',\n};\n\n/**\n * Return array of user auth providers\n */\nexport function getProviders(user: FirebaseAuthTypes.User | null): string[] {\n  if (user) {\n    return user.providerData.map(provider => provider.providerId);\n  }\n\n  return [];\n}\n\nexport function getProviderButtonTitle(\n  user: FirebaseAuthTypes.User | null,\n  providerID: ProviderID,\n) {\n  const providers = getProviders(user);\n  const isProvider = providers.includes(providerID);\n  const isOnlyProvider = providers.length === 1 && isProvider;\n  let variant = 'SIGN_IN';\n\n  if (user) {\n    variant = isProvider ? 'UNLINK' : 'LINK';\n  }\n\n  return {\n    variant,\n    title: `${providerTitles[variant]} ${providerNames[providerID]}`,\n    isOnlyProvider,\n  };\n}\n","import {StyleSheet, ViewStyle} from 'react-native';\nimport {Button} from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\ntype SocialType = 'facebook' | 'google' | 'apple' | 'phone';\n\ninterface Props {\n  style?: ViewStyle;\n  type: SocialType;\n  onPress: () => void;\n  loading?: boolean;\n  children: string;\n}\n\nfunction getSocialColor(type: SocialType): string {\n  switch (type) {\n    case 'facebook':\n      return '#4267B2';\n    case 'google':\n      return '#F96458';\n    case 'apple':\n      return '#000000';\n    case 'phone':\n      return '#b24292';\n  }\n}\n\nfunction ProviderButton({\n  style,\n  type,\n  onPress,\n  loading,\n  children,\n}: Props): JSX.Element {\n  return (\n    <Button\n      style={[styles.button, style]}\n      icon={() => <Icon name={type} color=\"#fff\" size={17} />}\n      mode=\"contained\"\n      color={getSocialColor(type)}\n      dark\n      loading={loading}\n      onPress={() => (loading ? null : onPress())}>\n      {children}\n    </Button>\n  );\n}\n\nexport default ProviderButton;\n\nconst styles = StyleSheet.create({\n  button: {\n    marginVertical: 5,\n    width: 300,\n  },\n});\n","// Native builds get the config from google-services.json GoogleService-Info.plist\nimport firebase from 'firebase/compat/app';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAT1mBDevSlggcqLDNnEAxCmj1KnSuMTtU',\n  authDomain: 'rnfirebase-auth-template.firebaseapp.com',\n  projectId: 'rnfirebase-auth-template',\n  storageBucket: 'rnfirebase-auth-template.appspot.com',\n  messagingSenderId: '725336377227',\n  appId: '1:725336377227:web:d7c6e3fb3d23f9d506118e',\n  measurementId: 'G-9BECK74F26',\n};\n\nconst initializeApp = (): void => {\n  firebase.initializeApp(firebaseConfig);\n};\n\nexport default initializeApp;\n","import {useLinkTo} from '@react-navigation/native';\nimport {StyleSheet, View} from 'react-native';\nimport {Button, Text} from 'react-native-paper';\nimport {useAppSettings} from './AppSettings';\n\nexport const NotFound = () => {\n  const appSettings = useAppSettings();\n  const linkTo = useLinkTo();\n\n  return (\n    <View style={styles.detailsContainer}>\n      <Text style={styles.sectionTitle}>\n        {appSettings.t('PageNotFoundText')}\n      </Text>\n      <View style={styles.spacer} />\n      <Button onPress={() => linkTo('/')}>{appSettings.t('home')}</Button>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  detailsContainer: {\n    flex: 1,\n    alignContent: 'center',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 24,\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: '600',\n  },\n  spacer: {\n    height: 20,\n  },\n});\n","import {Image, SafeAreaView, StyleSheet, View, ViewStyle} from 'react-native';\n\ninterface Props {\n  children?: React.ReactNode | React.ReactNode[];\n  height: number;\n  image?: string;\n  style?: ViewStyle;\n}\n\nfunction Hero({image, height, children, style}: Props): JSX.Element {\n  return (\n    <View style={[style, {height}]}>\n      {!!image && (\n        <Image\n          style={[styles.absolute, styles.image]}\n          source={{\n            uri: image,\n          }}\n        />\n      )}\n      <SafeAreaView style={[styles.absolute, styles.fadedImage]}>\n        {children}\n      </SafeAreaView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  absolute: {\n    flex: 1,\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  fadedImage: {\n    backgroundColor: 'rgba(0,0,0,0.7)',\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n  },\n});\n\nexport default Hero;\n","import {useContext, useState} from 'react';\nimport auth from '@react-native-firebase/auth';\nimport {AccessToken, LoginManager} from 'react-native-fbsdk-next';\nimport {useAlerts} from 'react-native-paper-alerts';\n\nimport {UserContext} from '../App';\nimport {useAppSettings} from '../components/AppSettings';\nimport ProviderButton from '../components/AuthProviderButton';\nimport {getProviderButtonTitle} from '../util/helpers';\n\nconst PROVIDER_ID = 'facebook.com';\n\nfunction Facebook(): JSX.Element | null {\n  const [loading, setLoading] = useState(false);\n  const user = useContext(UserContext);\n  const Alert = useAlerts();\n  const appSettings = useAppSettings();\n\n  const {isOnlyProvider, title, variant} = getProviderButtonTitle(\n    user,\n    PROVIDER_ID,\n  );\n\n  async function handleFacebook() {\n    if (!loading) {\n      setLoading(true);\n\n      try {\n        if (variant === 'UNLINK' && user) {\n          await user.unlink(PROVIDER_ID);\n          await user.reload();\n        } else {\n          const {isCancelled} = await LoginManager.logInWithPermissions([\n            'public_profile',\n            'email',\n          ]);\n\n          if (isCancelled) {\n            Alert.alert(\n              appSettings.t('facebookAuthError'),\n              appSettings.t('facebookAuthCancelled'),\n              [{text: appSettings.t('OK')}],\n            );\n          } else {\n            const result = await AccessToken.getCurrentAccessToken();\n            if (!result) {\n              throw new Error(appSettings.t('facebookAuthErrorMessage'));\n            }\n\n            const {accessToken} = result;\n\n            const credential =\n              auth.FacebookAuthProvider.credential(accessToken);\n\n            if (variant === 'LINK' && user) {\n              await user.linkWithCredential(credential);\n              await user.reload();\n            } else if (variant === 'SIGN_IN') {\n              await auth().signInWithCredential(credential);\n            }\n          }\n        }\n      } catch (error) {\n        setLoading(false);\n        // TODO catalog error messages and translate. Passing raw now\n        Alert.alert(\n          appSettings.t('facebookAuthError'),\n          (error as Error).message,\n          [{text: appSettings.t('OK')}],\n        );\n      }\n    }\n  }\n\n  if (isOnlyProvider) {\n    return null;\n  }\n\n  return (\n    <ProviderButton loading={loading} type=\"facebook\" onPress={handleFacebook}>\n      {title}\n    </ProviderButton>\n  );\n}\n\nexport default Facebook;\n","import {useContext, useEffect, useState} from 'react';\nimport auth from '@react-native-firebase/auth';\nimport {FirebaseError} from '@firebase/util';\nimport {useAlerts} from 'react-native-paper-alerts';\nimport {\n  GoogleSignin,\n  statusCodes,\n} from '@react-native-google-signin/google-signin';\n\nimport {UserContext} from '../App';\nimport {useAppSettings} from '../components/AppSettings';\nimport ProviderButton from '../components/AuthProviderButton';\nimport {getProviderButtonTitle} from '../util/helpers';\n\nconst PROVIDER_ID = 'google.com';\n\nfunction Google(): JSX.Element | null {\n  const [loading, setLoading] = useState(false);\n  const user = useContext(UserContext);\n  const Alert = useAlerts();\n  const appSettings = useAppSettings();\n\n  const {isOnlyProvider, title, variant} = getProviderButtonTitle(\n    user,\n    PROVIDER_ID,\n  );\n\n  async function handleGoogle() {\n    if (!loading) {\n      setLoading(true);\n\n      try {\n        await GoogleSignin.hasPlayServices();\n\n        if (variant === 'UNLINK' && user) {\n          await user.unlink(PROVIDER_ID);\n          await user.reload();\n        } else {\n          await GoogleSignin.signIn();\n          const {accessToken, idToken} = await GoogleSignin.getTokens();\n          const credential = auth.GoogleAuthProvider.credential(\n            idToken,\n            accessToken,\n          );\n\n          if (variant === 'LINK' && user) {\n            await user.linkWithCredential(credential);\n            await user.reload();\n          } else if (variant === 'SIGN_IN') {\n            await auth().signInWithCredential(credential);\n          }\n        }\n      } catch (e) {\n        setLoading(false);\n        const error = e as FirebaseError;\n        switch (error.code) {\n          case statusCodes.SIGN_IN_CANCELLED:\n          case '-1':\n            return Alert.alert(\n              appSettings.t('googleAuthError'),\n              appSettings.t('googleAuthCancelled'),\n              [{text: appSettings.t('OK')}],\n            );\n          case statusCodes.IN_PROGRESS:\n            return Alert.alert(\n              appSettings.t('googleAuthError'),\n              appSettings.t('googleAuthInProgress'),\n              [{text: appSettings.t('OK')}],\n            );\n          case statusCodes.PLAY_SERVICES_NOT_AVAILABLE:\n            return Alert.alert(\n              appSettings.t('googleAuthError'),\n              appSettings.t('googleAuthPlayServices'),\n              [{text: appSettings.t('OK')}],\n            );\n          default:\n            switch (error.message) {\n              case 'DEVELOPER_ERROR':\n                console.info(\n                  'Developer error during Google Auth, check: ' +\n                    'https://github.com/react-native-google-signin/google-signin/blob/f21dd95a090f4f529748473e20515d6fc66db6bb/example/README.md#developer_error-or-code-10-on-android',\n                );\n                return Alert.alert(\n                  appSettings.t('googleAuthError'),\n                  appSettings.t('googleAuthConfigError'),\n                  [{text: appSettings.t('OK')}],\n                );\n              default:\n                // TODO get catalog of all errors and translate them\n                return Alert.alert(\n                  appSettings.t('googleAuthError'),\n                  error.message,\n                  [{text: appSettings.t('OK')}],\n                );\n            }\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    GoogleSignin.configure({\n      scopes: ['profile', 'email'],\n      // TODO: Get your web client id from firebase console --> Project Settings --> Auth --> Google Sign-in\n      webClientId: require('../../config.json').webClientId,\n    });\n  }, []);\n\n  if (isOnlyProvider) {\n    return null;\n  }\n\n  return (\n    <ProviderButton loading={loading} onPress={handleGoogle} type=\"google\">\n      {title}\n    </ProviderButton>\n  );\n}\n\nexport default Google;\n","// import type {\n//   // AddScopesParams,\n//   SignInParams,\n//   ConfigureParams,\n//   HasPlayServicesParams,\n//   User\n// } from '../../node_modules/@react-native-google-signin/google-signin/src/types';\n\nclass GoogleSigninImpl {\n  constructor() {\n    console.log('GoogleSignin loaded in web mode.');\n  }\n\n  async signIn(): Promise<{}> {\n    console.log('should do a google signin');\n    return {};\n  }\n\n  async hasPlayServices(): Promise<boolean> {\n    console.log('should check play services');\n    return false;\n  }\n\n  async getTokens(): Promise<{idToken: string; accessToken: string}> {\n    return {\n      idToken: 'badidtoken',\n      accessToken: 'badaccesstoken',\n    };\n  }\n\n  configure(options: {}): void {\n    console.log(\n      'should configure google signin with options: ' + JSON.stringify(options),\n    );\n  }\n\n  signOut(): void {\n    console.log('should signout google');\n  }\n}\n\nexport const GoogleSignin = new GoogleSigninImpl();\n\nexport const statusCodes = {\n  SIGN_IN_CANCELLED: 12501, // https://developers.google.com/android/reference/com/google/android/gms/auth/api/signin/GoogleSignInStatusCodes#public-static-final-int-sign_in_cancelled\n  IN_PROGRESS: 'ASYNC_OP_IN_PROGRESS',\n  PLAY_SERVICES_NOT_AVAILABLE: 'PLAY_SERVICES_NOT_AVAILABLE',\n  SIGN_IN_REQUIRED: 4, // https://developers.google.com/android/reference/com/google/android/gms/common/api/CommonStatusCodes#public-static-final-int-sign_in_required\n};\n\nexport {};\n","import {useContext, useState} from 'react';\nimport {Platform, StyleSheet} from 'react-native';\nimport {FirebaseError} from '@firebase/util';\nimport auth from '@react-native-firebase/auth';\nimport appleAuth, {\n  AppleButton,\n  AppleRequestOperation,\n  AppleRequestScope,\n} from '@invertase/react-native-apple-authentication';\nimport {useAlerts} from 'react-native-paper-alerts';\n\nimport {UserContext} from '../App';\nimport {useAppSettings} from '../components/AppSettings';\nimport {getProviderButtonTitle} from '../util/helpers';\n\nconst PROVIDER_ID = 'apple.com';\n\nfunction Apple(): JSX.Element | null {\n  const [loading, setLoading] = useState(false);\n  const user = useContext(UserContext);\n  const Alert = useAlerts();\n  const appSettings = useAppSettings();\n\n  if (Platform.OS !== 'ios') {\n    return null;\n  }\n\n  const {isOnlyProvider, variant} = getProviderButtonTitle(user, PROVIDER_ID);\n\n  async function handleApple() {\n    if (!loading) {\n      setLoading(true);\n\n      try {\n        if (variant === 'UNLINK' && user) {\n          await user.unlink(PROVIDER_ID);\n          await user.reload();\n        } else {\n          const appleAuthRequestResponse = await appleAuth.performRequest({\n            requestedOperation: AppleRequestOperation.LOGIN,\n            requestedScopes: [\n              AppleRequestScope.EMAIL,\n              AppleRequestScope.FULL_NAME,\n            ],\n          });\n\n          const {identityToken, nonce} = appleAuthRequestResponse;\n          if (identityToken) {\n            const credential = auth.AppleAuthProvider.credential(\n              identityToken,\n              nonce,\n            );\n\n            if (variant === 'LINK' && user) {\n              await user.linkWithCredential(credential);\n              await user.reload();\n            } else if (variant === 'SIGN_IN') {\n              await auth().signInWithCredential(credential);\n            }\n          } else {\n            Alert.alert(\n              appSettings.t('appleAuthErrorTitle'),\n              appSettings.t('appleAuthErrorMessage'),\n              [{text: appSettings.t('OK')}],\n            );\n          }\n        }\n      } catch (e) {\n        setLoading(false);\n        const error = e as FirebaseError;\n        if (error.code !== '1001') {\n          // TODO: translate all possible cases - just sending through raw now\n          Alert.alert(appSettings.t('appleAuthErrorTitle'), error.message, [\n            {text: appSettings.t('OK')},\n          ]);\n        }\n      }\n    }\n  }\n\n  if (isOnlyProvider) {\n    return null;\n  }\n\n  return (\n    <AppleButton\n      style={styles.appleButton}\n      cornerRadius={5}\n      buttonStyle={AppleButton.Style.WHITE}\n      buttonType={AppleButton.Type.SIGN_IN}\n      onPress={() => handleApple()}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  appleButton: {\n    width: 300,\n    height: 35,\n    margin: 6,\n  },\n});\n\nexport default Apple;\n","import i18n from 'i18n-js';\nimport {useCallback, useEffect, useState} from 'react';\nimport {I18nManager, Platform, useColorScheme} from 'react-native';\nimport {\n  findBestAvailableLanguage,\n  addEventListener,\n} from 'react-native-localize';\nimport analytics from '@react-native-firebase/analytics';\nimport auth from '@react-native-firebase/auth';\nimport {translations} from '../translations';\nimport {darkTheme, defaultTheme} from '../theme';\nimport {Theme as PaperTheme} from 'react-native-paper/lib/typescript/types';\nimport {Theme as NavigationTheme} from '@react-navigation/native';\n\nexport type LanguageLocale = {\n  languageTag: string;\n  isRTL: boolean;\n};\n\nexport const fallbackLanguageLocale: LanguageLocale = {\n  languageTag: 'en',\n  isRTL: false,\n};\n\nexport type AppSettings = {\n  languageLocale: LanguageLocale | null;\n  t: (key: string, config?: any) => string;\n  colorScheme: string;\n  currentTheme: PaperTheme & NavigationTheme;\n};\n\nexport const useAppSettings = (): AppSettings => {\n  const [languageLocale, setLanguageLocale] = useState<LanguageLocale | null>(\n    null,\n  );\n  const [listening, setListening] = useState(false);\n  const colorScheme = useColorScheme();\n\n  const configureI18n = useCallback(languageTag => {\n    i18n.translations = translations;\n    i18n.locale = languageTag;\n    i18n.fallbacks = true;\n    i18n.defaultLocale = fallbackLanguageLocale.languageTag.substring(0, 2);\n    if (Platform.OS === 'web') {\n      auth().languageCode = languageTag;\n    } else {\n      auth().setLanguageCode(languageTag);\n    }\n\n    // Missing translations is a common problem. Log them in analytics for visibility.\n    i18n.missingTranslation = (param: any, otherParam: any) => {\n      console.log(\n        `AppSettings::t - missing translation - received param / otherparam: ${param}`,\n        otherParam,\n      );\n\n      analytics().logEvent('I18N_Not_Translated', {\n        i18n_key: `${languageTag}.${param}`,\n      });\n      let translation = `I18N: ${param}`;\n      if (otherParam && otherParam.default) {\n        translation += ` (${otherParam.default})`;\n      }\n      return translation;\n    };\n  }, []);\n\n  const listener = useCallback(() => {\n    const bestAvailable =\n      findBestAvailableLanguage(Object.keys(translations)) ??\n      fallbackLanguageLocale;\n    setLanguageLocale(bestAvailable);\n    I18nManager.forceRTL(bestAvailable.isRTL);\n    configureI18n(bestAvailable.languageTag);\n  }, [configureI18n]);\n\n  useEffect(() => {\n    listener();\n\n    if (!listening) {\n      addEventListener('change', listener);\n      setListening(true);\n    }\n\n    // return () => {\n    //   removeEventListener('change', listener);\n    //   console.log('AppSettings::useEffect::removed listener');\n    // };\n  }, [listening, listener]);\n\n  return {\n    languageLocale,\n    t: (key: string, config?: any) => i18n.t(key, config),\n    colorScheme: colorScheme ?? 'light',\n    currentTheme: colorScheme === 'light' ? defaultTheme : darkTheme,\n  };\n};\n","/**\n * When compiling for web, it will search for index.js on root/src.\n */\n\nimport {AppRegistry} from 'react-native';\nimport App from './app/App';\nimport {name as appName} from './app.json';\nimport './utils/icons';\n\nAppRegistry.registerComponent(appName, () => App);\nAppRegistry.runApplication(appName, {\n  rootTag: document.getElementById('root'),\n});\n","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\nimport initializeApp from './firebase-init';\ninitializeApp();\n\nconst auth = firebase.auth;\n\n// Want to do local development?\n// Uncomment this and use `yarn test:emulator:start`\n// auth().useEmulator('http://localhost:9099');\n\nexport default auth;\n","import {createMaterialTopTabNavigator} from '@react-navigation/material-top-tabs';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {useAppSettings} from '../components/AppSettings';\nimport {NotFound} from '../components/NotFound';\nimport {useSafeAreaInsets} from 'react-native-safe-area-context';\nimport {App as GettingStarted} from '../../luna-app/App';\nimport Profile from './Profile';\nimport Settings from './Settings';\n\nconst Stack = createStackNavigator();\nconst TopTabs = createMaterialTopTabNavigator();\n\nconst ProfileStack = () => {\n  const appSettings = useAppSettings();\n  return (\n    <Stack.Navigator initialRouteName=\"UserProfile\">\n      <Stack.Screen\n        name=\"UserProfile\"\n        component={Profile}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"UserSettings\"\n        options={{title: appSettings.t('settings')}}\n        component={Settings}\n      />\n      <Stack.Screen\n        name=\"NotFound\"\n        component={NotFound}\n        options={{title: appSettings.t('NotFound')}}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst SignedIn = () => {\n  // Used for status bar layout in react-navigation\n  const insets = useSafeAreaInsets();\n  const appSettings = useAppSettings();\n\n  const screenOptions = {\n    tabBarStyle: {\n      paddingTop: insets.top,\n    },\n  };\n\n  return (\n    <TopTabs.Navigator initialRouteName=\"Home\" screenOptions={screenOptions}>\n      <TopTabs.Screen\n        name=\"Home\"\n        options={{title: appSettings.t('gettingStarted')}}\n        component={GettingStarted}\n      />\n      <TopTabs.Screen\n        name=\"User\"\n        options={{title: appSettings.t('userInfo')}}\n        component={ProfileStack}\n      />\n    </TopTabs.Navigator>\n  );\n};\n\nexport default SignedIn;\n","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/analytics';\n\nimport initializeApp from './firebase-init';\ninitializeApp();\n\nconst analytics = firebase.analytics;\nexport default analytics;\n","import {english} from './en';\nimport {spanish} from './es';\n\nexport interface translation {\n  [key: string]: string;\n}\n\nexport interface translationMap {\n  [key: string]: translation;\n}\n\nexport const translations: translationMap = {en: english, es: spanish};\n","import {translation} from './index';\nrequire('dayjs/locale/en');\n\nexport const english: translation = {\n  loading: 'Loading',\n  Success: 'Success',\n  OK: 'OK',\n  forgotPassword: 'Forgot Password?',\n  createAnAccount: 'Create an Account',\n  phoneSignIn: 'Sign in with phone number',\n  phoneSignInTitle: 'Phone Sign In',\n  signIn: 'Sign In',\n\n  home: 'Home',\n  NotFound: 'Page Not Found',\n  PageNotFoundText: 'Oh, no! This page does not exist.',\n  gettingStarted: 'Getting Started',\n  userInfo: 'User Info',\n  settings: 'Settings',\n\n  createAccountError: 'Create Account - Error',\n  createAccountPasswordsDifferent: 'Passwords do not match',\n  createAccountInstructions:\n    'Create an account with your email and password. Once created, you will be automatically logged in to your profile.',\n  emailLabel: 'Email Address',\n  passwordLabel: 'Password',\n  createAccountPasswordConfirmLabel: 'Confirm Password',\n  passwordsDoNotMatch: 'Passwords do not match',\n  createAccountCreating: 'Creating Account',\n  createAccountCreate: 'Create Account',\n\n  forgotPasswordInstructions:\n    'Enter your email address below to send a password reset email:',\n  forgotPasswordLabel: 'Email Address',\n  forgotPasswordError: 'Forgot Password - Error',\n  forgotPasswordSending: 'Sending Password Reset',\n  forgotPasswordSend: 'Send Password Reset',\n\n  phoneVerificationCode: 'Verification Code',\n  phoneVerificationConfirm: 'Confirm',\n  phoneVerificationCountryInstructions: 'Touch to select phone number country',\n  phoneVerificationNumberInstructions: 'Enter your phone number:',\n  phoneVerificationNumberLabel: 'Phone Number',\n  phoneVerificationNumberSubmit: 'Submit',\n\n  signInSigningIn: 'Signing In',\n  signInSignIn: 'Sign In',\n\n  profileLastSignIn: 'Last sign-in',\n\n  userUpdateError: 'User Update Error',\n  userEmailVerify: 'Re-send',\n  userEmailVerification: 'Verification',\n  userEmailVerificationInstructions1: 'A verification email has been sent to',\n  userEmailVerificationInstructions2:\n    'Please follow the instructions to verify your email address',\n  userEmailVerificationBanner:\n    'Please verify your email address to use the full features of this app. Click the re-send button below to re-send the verification email. If you did verify, press re-verify to update your status here.',\n  userEmailVerifyTitle: 'Email Verifification',\n  userEmailVerificationSuccess:\n    'You have successfully verified your email address.',\n  userEmailVerificationFailure:\n    'It appears your email is still not verified. Try re-sending the verification email and following the instructions in the email.',\n  userEmailVerificationVerifyButton: 'Re-verify',\n  userDisplayLabel: 'Display Settings:',\n  userNameDisplayLabel: 'Display Name',\n  userNameDisplayInstructions:\n    'Set a custom display name for a personalized greeting.',\n  userNameDisplaySave: 'Save',\n  userNameDisplayUpdatedTitle: 'Display Name Changed',\n  userNameDisplayUpdateMessage:\n    'Your display name has been changed successfully.',\n  userPasswordUpdateLabel: 'Password Update:',\n  userPasswordInstructions:\n    'Update your account password. For security purposes, please enter your current account password.',\n  userPasswordCurrent: 'Current Password',\n  userPasswordNew: 'New Password',\n  userPasswordConfirm: 'Confirm New Password',\n  userPasswordUpdate: 'Update',\n  userSignOut: 'Sign Out',\n\n  // Google auth messages\n  googleAuthErrorTitle: 'Google Auth Error',\n  googleAuthCancelled: 'Google authentication cancelled.',\n  googleAuthInProgress: 'Google authentication already in progress.',\n  googleAuthPlayServices:\n    'Google authentication requires Google Play services.',\n  googleAuthConfigError:\n    'Google authentication is not configured correctly for this application.',\n  // TODO get catalog of google error messages and translate them\n\n  // Facebook auth messages\n  facebookAuthErrorTitle: 'Facebook Auth Error',\n  facebookAuthCancelled: 'Facebook authentication cancelled.',\n  facebookAuthErrorMessage: 'We did not obtain an access token from Facebook.',\n  // TODO get catalog of facebook error messages and translate them\n\n  // Apple auth messages\n  appleAuthErrorTitle: 'Apple Auth Error',\n  appleAuthErrorMessage: 'Unable to obtain an identity token from Apple.',\n  // TODO get catalog of Apple auth error codes and translate them\n\n  // Firebase auth error messages - from firebase error catalog\n  unknownError: 'An unexpected error occurred. Please try again.',\n  'invalid-session': 'Invalid Session',\n  'invalid-session-message': 'Your session is invalid, please login again',\n  'registration-error': 'Registration Error',\n  'user-created': 'User Registered',\n  'user-created-message': 'New user account registered successfully',\n  'change-password-email': 'Password Reset Link Sent',\n  'change-password-email-message':\n    'We have successfully sent a password reset link to your address. Please check your email to change your password, then try to login again.',\n  'change-password-email-error': 'Password Reset Email Error',\n  'change-password-email-error-message':\n    'There was an error sending the email to reset your password. Please check the address and try again.',\n  'change-password-error': 'Password Reset Error',\n  'change-password-successful': 'Password Change Successful',\n  'change-password-successful-message':\n    'You have successfully changed your password.',\n  'logout-error': 'Logout Error',\n  'login-error': 'Login Error',\n  'email-send': 'Verification Email Sent',\n  'email-send-message': 'A new verification link was sent to your email',\n  'email-send-error': 'Error Verifying Email',\n  'email-not-verified': 'Email Not Verified',\n  'email-not-verified-message':\n    'We are sorry, your email is still not verified. Please re-send and check your email for a link',\n  'email-verified': 'Email Verified',\n  'email-verified-message': 'Your email has been verified successfully',\n  'phone-link-error': 'Error Linking Phone',\n  'phone-verify-error': 'Error Verifying Phone',\n  'phone-auth-error':\n    'You must enter your full number, with country and area code, for example +14155551212',\n  'phone-code-sent': 'SMS Code Sent',\n  'phone-code-sent-message': 'The SMS verification code was sent successfully',\n  'phone-code-auto': 'SMS Code Received',\n  'phone-code-auto-message':\n    'The SMS verification code was retrieved successfully',\n  'phone-link-success': 'Phone Verified',\n  'phone-link-success-message':\n    'Your phone number has been successfully verified',\n  'auth/firebase-auth':\n    'This application only works on devices with Google Play Services',\n  'auth/captcha-check-failed':\n    'The CAPTCHA check failed. Please wait a moment, then try again',\n  'auth/app-not-authorized':\n    'This application is not permitted to use authentication. Contact Customer Support',\n  'auth/credential-already-in-use':\n    'That login is in use by another account already. You should login with the other account, then link this one.',\n  'auth/invalid-action-code': 'Code expired, please try again',\n  'auth/session-expired': 'Session expired, please try again',\n  'auth/code-expired': 'Code expired, please try again',\n  'auth/network-request-failed': 'Network request failed, please try again',\n  'auth/expired-action-code':\n    'Code already used or malformed, please try again',\n  'auth/invalid-phone-number': 'Invalid phone number',\n  'auth/provider-already-linked':\n    'You have already connected this sign in method',\n  'auth/invalid-verification-code':\n    'The SMS code you entered was invalid. Please send the code again',\n  'auth/invalid-verification-id':\n    'The SMS code you entered was invalid. Please send the code again',\n  'auth/invalid-email': 'Incorrect email format',\n  'auth/email-already-in-use':\n    'The email you entered is already in use. Please use a different email or recover the account with that email with \"forgot password\"',\n  'auth/quota-exceeded':\n    \"This application has exceeded it's SMS quota! Please contact customer support\",\n  'auth/user-disabled': 'This account has been disabled',\n  'auth/user-not-found': 'Email or password incorrect',\n  'auth/unknown':\n    'We are sorry, there was an error on the server with your request. Usually that means try again in a few minutes',\n  'auth/wrong-password': 'Email or password incorrect',\n  'auth/weak-password': 'Password must be at least 6 characters',\n  'auth/too-many-requests':\n    'Too many codes requested too quickly. Please wait before trying again.',\n  'auth/invalid-credential':\n    'Authentication failure. Please close the app, re-open, and try again.',\n};\n","import {translation} from './index';\nrequire('dayjs/locale/es');\n\nexport const spanish: translation = {\n  loading: 'Cargando',\n  Success: 'Éxito',\n  OK: 'OK',\n  forgotPassword: 'Olvidó Contrasena?',\n  createAnAccount: 'Crea una Cuenta',\n  phoneSignIn: 'Entra con número de móvil',\n  phoneSignInTitle: 'Entra con Número de Móvil',\n  signIn: 'Entra',\n\n  home: 'Inicio',\n  NotFound: 'Página No encontrada',\n  PageNotFoundText: '¡Oh, no! Esta página no existe.',\n  gettingStarted: 'Como Empezar',\n  userInfo: 'Usuario',\n  settings: 'Configuración',\n\n  createAccountError: 'Crea Cuenta - Error',\n  createAccountPasswordsDifferent: 'Las contraseñas son diferente',\n  createAccountInstructions:\n    'Crea una cuenta con su correo electrónico y contraseña. Una vez creada, entrará automáticamente en su perfil.',\n  emailLabel: 'Correo Electrónico',\n  passwordLabel: 'Contraseña',\n  createAccountPasswordConfirmLabel: 'Confirma Contraseña',\n  passwordsDoNotMatch: 'Contraseñas no estan de acuerdo',\n  createAccountCreating: 'Creando Cuenta',\n  createAccountCreate: 'Crea Cuenta',\n\n  forgotPasswordInstructions:\n    'Entra su correo electrónico debajo para enviar un email para reestablecer su contraseña',\n  forgotPasswordLabel: 'Correo Electrónico',\n  forgotPasswordError: 'Olvodó Password - Error',\n  forgotPasswordSending: 'Enviando correo',\n  forgotPasswordSend: 'Envia Correo',\n\n  phoneVerificationCode: 'Código de Verificación',\n  phoneVerificationConfirm: 'Confirma',\n  phoneVerificationCountryInstructions: 'Marca para elegir pais de telefono',\n  phoneVerificationNumberInstructions: 'Entra su número de móvil:',\n  phoneVerificationNumberLabel: 'Número de Móvil',\n  phoneVerificationNumberSubmit: 'Entra',\n\n  signInSigningIn: 'Entrando',\n  signInSignIn: 'Entra',\n\n  profileLastSignIn: 'Último ingreso',\n\n  userUpdateError: 'Error Actualizando Usuario',\n  userEmailVerify: 'Re-enviar',\n  userEmailVerification: 'Verificación',\n  userEmailVerificationInstructions1:\n    'Se ha enviado un correo electrónico de verificación a',\n  userEmailVerificationInstructions2:\n    'Siga las instrucciones para verificar su dirección de correo electrónico',\n  userEmailVerificationBanner:\n    'Por favor, verifique su dirección de correo electrónico para utilizar todas las funciones de esta aplicación. Haz clic en el botón re-enviar de abajo para re-enviar un correo electrónico de verificación. Si ya ha verificado, toca el botón re-verificar para actualizar su estado en la app.',\n  userEmailVerifyTitle: 'Verifificación de correo',\n  userEmailVerificationSuccess:\n    'Ha verificado su dirección de correo electrónico con éxito.',\n  userEmailVerificationFailure:\n    'Se parece que su correo no esta verificado. Intenta re-enviar el correo otra vez y sigue las instrucciones en el correo.',\n  userEmailVerificationVerifyButton: 'Re-verify',\n  userDisplayLabel: 'Configuración',\n  userNameDisplayLabel: 'Nombre para mostrar',\n  userNameDisplayInstructions:\n    'Establecer un nombre de visualización para un saludo personalizado.',\n  userNameDisplaySave: 'Guardar',\n  userNameDisplayUpdatedTitle: 'Nombre para mostrar Cambiado',\n  userNameDisplayUpdateMessage: 'Su nombre para mostrar ya esta cambiado',\n  userPasswordUpdateLabel: 'Actualiza Contraseña:',\n  userPasswordInstructions:\n    'Actualice la contraseña de su cuenta. Por razones de seguridad, introduzca la contraseña actual de su cuenta',\n  userPasswordCurrent: 'Contraseña Actual',\n  userPasswordNew: 'Contraseña Nueva',\n  userPasswordConfirm: 'Contraseña Nueva Confirmada',\n  userPasswordUpdate: 'Cambie',\n  userSignOut: 'Salir',\n\n  // Google auth messages\n  googleAuthErrorTitle: 'Error con Google',\n  googleAuthCancelled: 'Google autenticación cancelado.',\n  googleAuthInProgress: 'La autenticación de Google ya está en marcha.',\n  googleAuthPlayServices:\n    'La autenticación de Google requiere los servicios de Google Play.',\n  googleAuthConfigError:\n    'Google Auth no se ha configurado correctamente para esta aplicación.',\n  // TODO get catalog of google error messages and translate them\n\n  // Facebook auth messages\n  facebookAuthErrorTitle: 'Error con Facebook',\n  facebookAuthCancelled: 'Facebook autenticación cancelado.',\n  facebookAuthErrorMessage:\n    'No obtenemos token de acceso por parte de Facebook.',\n  // TODO get catalog of facebook error messages and translate them\n\n  // Apple auth messages\n  appleAuthErrorTitle: 'Error con Apple Auth',\n  appleAuthErrorMessage: 'No obtenemos un token de identidad desde Apple.',\n  // TODO get catalog of Apple auth error codes and translate them\n\n  // Firebase auth error messages\n  unknownError:\n    'Se ha producido un error inesperado. por favor, inténtelo de nuevo',\n  'invalid-session': 'Sesión inválida',\n  'invalid-session-message':\n    'No has iniciado sesión, ingresa de nuevo por favor',\n  'registration-error': 'Error de registro',\n  'user-created': 'Usuario registrado',\n  'user-created-message': 'Usuario nuevo registrado con éxito',\n  'change-password-email': 'Vínculo enviado para cambio de contraseña',\n  'change-password-email-message':\n    'Revisa tu correo y cambia la contraseña a través del link que te acabamos de enviar',\n  'change-password-email-error':\n    'Error al enviar correo para cambio de contraseña',\n  'change-password-email-error-message':\n    'Disculpa, ha habido un error enviando el correo para cambiar tu contraseña. Por favor rectifica tu correo para cambiar tu contraseña e intenta ingresar de nuevo.',\n  'change-password-error': 'Error al cambiar contraseña',\n  'change-password-successful': 'Constraseña actualizada',\n  'change-password-successful-message':\n    'Has cambiado tu contraseña con éxito. Por favor intenta ingresar con tu nueva contraseña.',\n  'logout-error': 'Error cerrando sesión',\n  'login-error': 'Error iniciando sesión',\n  'email-send': 'Email de verificación enviado',\n  'email-send-message': 'Hemos enviado un nuevo link para verificar tu cuenta',\n  'email-send-error': 'Error verificando Email',\n  'email-not-verified': 'Email no verificado',\n  'email-not-verified-message':\n    'Estimado usuario, tu email aún no ha sido verificado',\n  'email-verified': 'Email verificado',\n  'email-verified-message': 'Tu email ha sido verificado con éxito',\n  'phone-link-error': 'Error verificando dispositivo',\n  'phone-verify-error': 'Error verificando dispositivo',\n  'phone-auth-error':\n    'Debes ingresar tu número completo con el código de país, ej: +59398111xxxx',\n  'phone-code-sent': 'Código SMS Enviado',\n  'phone-code-sent-message':\n    'El código SMS para verificar tu dispositivo fue enviado con éxito',\n  'phone-code-auto': 'Código SMS recibido',\n  'phone-code-auto-message':\n    'El código SMS para verificar tu dispositivo fue recibido con éxito',\n  'phone-link-success': 'Dispositivo verificado',\n  'phone-link-success-message': 'Tu dispositivo ha sido verificado con éxito',\n  'auth/firebase-auth':\n    'Esta applicación solo funciona en dispositivos con Google Play Services',\n  'auth/app-not-authorized':\n    'Esta applicación no tiene permiso para servicios de autenticación. Contacte servicio al cliente.',\n  'auth/captcha-check-failed':\n    'Error en control de CAPTCHA. Por favor espere un momento e intente de nuevo',\n  'auth/credential-already-in-use':\n    'Su dispositivo ya está en uso. Elija otro o contáctenos para solucionar.',\n  'auth/session-expired': 'Sesión caducado, por favor intente de nuevo',\n  'auth/invalid-action-code': 'Código caducado, por favor intente de nuevo',\n  'auth/code-expired': 'Código caducado, por favor intente de nuevo',\n  'auth/network-request-failed':\n    'Problema con la red, por favor intente de nuevo',\n  'auth/expired-action-code':\n    'Código usado o malformado, por favor intente de nuevo',\n  'auth/invalid-phone-number': 'Formato incorrecto de número de teléfono',\n  'auth/provider-already-linked':\n    'Ya verificó con este método de inicio de sesión',\n  'auth/invalid-verification-code':\n    'El código SMS que ha entrado es inválido. Enviar de nuevo por favor',\n  'auth/invalid-verification-id':\n    'El código SMS que ha entrado es inválido. Enviar de nuevo por favor',\n  'auth/invalid-email': 'Formato incorrecto de email',\n  'auth/email-already-in-use':\n    'Este email ya está en uso. Por favor elija otro email o haga clik en \"Olvido contraseña',\n  'auth/quota-exceeded':\n    'Esta applicación ha superado cuota de SMS. Por favor contacte servicio al cliente',\n  'auth/user-disabled': 'Esta cuenta ha sido desactivada',\n  'auth/user-not-found': 'Email o contraseña incorrecta',\n  'auth/unknown':\n    'Disculpe, ha ocurrido un problema con su solicitud. Usualmente significa que necesita esperar unos minutos e intentar de nuevo',\n  'auth/wrong-password': 'Email o contraseña incorrecta',\n  'auth/weak-password': 'LA contraseña debe tener mínimo 6 carácteres',\n  'auth/too-many-requests':\n    'Demasiado códigos pedidos demasiado rápido. Por favor espere un rato y intente de nuevo más tarde.',\n  'auth/invalid-credential':\n    'Error en validación. Por favor cierre la app, ábrela de nuevo, y re-intentar',\n};\n","import {\n  DarkTheme as PaperDarkTheme,\n  DefaultTheme as PaperDefaultTheme,\n} from 'react-native-paper';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\n\n// Customize the themes here as necessary\n\nexport const darkTheme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: '#009688',\n  },\n};\n\nexport const defaultTheme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n    primary: '#009688',\n  },\n};\n\n// export default {\n//   ...DefaultTheme,\n//   dark: false,\n//   roundness: 3,\n//   colors: {\n//     ...DefaultTheme.colors,\n//     primary: '#009688',\n//     accent: '#fff',\n//     background: '#fff',\n//   },\n// };\n","/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * Generated with the TypeScript template\n * https://github.com/react-native-community/react-native-template-typescript\n *\n * @format\n */\n\nimport appJson from './../app.json';\nimport React from 'react';\nimport {\n  Button,\n  ScrollView,\n  StyleSheet,\n  Text,\n  useColorScheme,\n  View,\n} from 'react-native';\nimport {\n  Colors,\n  DebugInstructions,\n  Header,\n  LearnMoreLinks,\n  ReloadInstructions,\n  // @ts-ignore -- these are not well typed, but are only example screens\n} from '../../node_modules/react-native/Libraries/NewAppScreen';\nimport {\n  SafeAreaProvider,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport {createMaterialTopTabNavigator} from '@react-navigation/material-top-tabs';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport {NavigationContainer, useLinkTo} from '@react-navigation/native';\n\n// *****************************************************************************************************\n// This pasted directly in from this file upstream\n// https://github.com/react-native-community/react-native-template-typescript/blob/main/template/App.tsx\n// The SafeAreaView and StatusBar are commented as those characteristics are provided by react-navigation\nconst Section: React.FC<{\n  title: string;\n}> = ({children, title}) => {\n  const isDarkMode = useColorScheme() === 'dark';\n  return (\n    <View style={styles.sectionContainer}>\n      <Text\n        style={[\n          styles.sectionTitle,\n          {\n            color: isDarkMode ? Colors.white : Colors.black,\n          },\n        ]}>\n        {title}\n      </Text>\n      <Text\n        style={[\n          styles.sectionDescription,\n          {\n            color: isDarkMode ? Colors.light : Colors.dark,\n          },\n        ]}>\n        {children}\n      </Text>\n    </View>\n  );\n};\n\nexport const App = () => {\n  const isDarkMode = useColorScheme() === 'dark';\n\n  const backgroundStyle = {\n    backgroundColor: isDarkMode ? Colors.darker : Colors.lighter,\n  };\n\n  return (\n    // <SafeAreaView style={backgroundStyle}> // <-- provided by react-navigation\n    // <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} /> // <-- provided by react-navigation\n    <ScrollView\n      contentInsetAdjustmentBehavior=\"automatic\"\n      style={backgroundStyle}>\n      <Header />\n      <View\n        style={{\n          backgroundColor: isDarkMode ? Colors.black : Colors.white,\n        }}>\n        <Section title=\"Step One\">\n          Edit <Text style={styles.highlight}>App.tsx</Text> to change this\n          screen and then come back to see your edits.\n        </Section>\n        <Section title=\"See Your Changes\">\n          <ReloadInstructions />\n        </Section>\n        <Section title=\"Debug\">\n          <DebugInstructions />\n        </Section>\n        <Section title=\"Learn More\">\n          Read the docs to discover what to do next:\n        </Section>\n        <LearnMoreLinks />\n      </View>\n    </ScrollView>\n    // </SafeAreaView> // <-- provided by react-navigation\n  );\n};\n\n// *****************************************************************************************************\n// The rest of the file is to set up a react-navigation and react-native-vector-icons demonstraiton:\nconst Tab = createMaterialTopTabNavigator();\nconst TopTabNavigator = () => {\n  // Used for status bar layout in react-navigation\n  const insets = useSafeAreaInsets();\n\n  // Allows us to use web-compatible navigation\n  const linkTo = useLinkTo();\n\n  // Dark mode theming items\n  const isDarkMode = useColorScheme() === 'dark';\n  const accentColor = isDarkMode ? Colors.ligher : Colors.darker;\n  const primaryColor = isDarkMode ? Colors.darker : Colors.lighter;\n  const backgroundStyle = {backgroundColor: primaryColor, flex: 1};\n\n  const DetailsTab = () => (\n    <View style={[backgroundStyle, styles.detailsContainer]}>\n      <Icon name=\"rocket\" size={30} color={'red'} />\n      <Text\n        style={[\n          styles.sectionTitle,\n          {\n            color: isDarkMode ? Colors.white : Colors.black,\n          },\n        ]}>\n        If you see a rocket, react-native-vector-icons is working!\n      </Text>\n    </View>\n  );\n  const LinkingExample = () => {\n    return (\n      <View style={[backgroundStyle, styles.detailsContainer]}>\n        <Button title=\"Link to Details\" onPress={() => linkTo('/details')} />\n      </View>\n    );\n  };\n\n  const screenOptions = {\n    tabBarStyle: {\n      backgroundColor: primaryColor,\n      paddingTop: insets.top,\n    },\n    tabBarLabelStyle: {color: isDarkMode ? Colors.light : Colors.dark},\n    tabBarIndicatorStyle: {backgroundColor: accentColor},\n  };\n\n  return (\n    <Tab.Navigator initialRouteName=\"Home\" screenOptions={screenOptions}>\n      <Tab.Screen component={App} key={'Home'} name={'Home'} />\n      <Tab.Screen component={DetailsTab} key={'Details'} name={'Details'} />\n      <Tab.Screen component={LinkingExample} key={'Linking'} name={'Linking'} />\n    </Tab.Navigator>\n  );\n};\n\nconst TabbedApp = () => {\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer\n        linking={{\n          prefixes: ['plaut-ro.github.io/luna', 'localhost'],\n          config: {\n            screens: {\n              Details: 'details',\n              Linking: 'linking',\n              Home: '*', // Fall back to if no routes match\n            },\n          },\n        }}\n        documentTitle={{\n          formatter: (options, route) =>\n            `${appJson.displayName} - ${options?.title ?? route?.name}`,\n        }}>\n        <TopTabNavigator />\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  detailsContainer: {\n    flex: 1,\n    alignContent: 'center',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  sectionContainer: {\n    marginTop: 32,\n    paddingHorizontal: 24,\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: '600',\n  },\n  sectionDescription: {\n    marginTop: 8,\n    fontSize: 18,\n    fontWeight: '400',\n  },\n  highlight: {\n    fontWeight: '700',\n  },\n});\n\nexport default TabbedApp;\n","import dayjs from 'dayjs';\nimport {useContext} from 'react';\nimport {Platform, StyleSheet, View} from 'react-native';\nimport {\n  Avatar,\n  Caption,\n  FAB,\n  Headline,\n  Subheading,\n  useTheme,\n  Title,\n} from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport {useLinkTo} from '@react-navigation/native';\n\nimport {UserContext} from '../App';\nimport Hero from '../components/Hero';\nimport Provider from '../components/AuthProvider';\nimport Facebook from '../auth-providers/Facebook';\nimport Google from '../auth-providers/Google';\nimport Apple from '../auth-providers/Apple';\nimport {getProviders} from '../util/helpers';\nimport {\n  fallbackLanguageLocale,\n  useAppSettings,\n} from '../components/AppSettings';\nrequire('dayjs/locale/en');\nrequire('dayjs/locale/es');\n\nfunction Profile() {\n  const theme = useTheme();\n  const user = useContext(UserContext);\n  const appSettings = useAppSettings();\n  const linkTo = useLinkTo();\n\n  if (!user) {\n    return null;\n  }\n\n  // Array of providers the the user is linked with\n  const providers = getProviders(user);\n\n  return (\n    <View style={styles.container}>\n      <Hero height={60} style={{backgroundColor: theme.colors.primary}} />\n      <View style={[styles.content, styles.profile]}>\n        {user.photoURL ? (\n          <Avatar.Image size={80} source={{uri: user.photoURL}} />\n        ) : (\n          <Avatar.Text\n            size={80}\n            label={\n              user.displayName\n                ? user.displayName.substring(0, 2).toUpperCase()\n                : user.email\n                ? user.email.substring(0, 2).toUpperCase()\n                : 'A'\n            }\n            style={[styles.avatar, {borderColor: theme.colors.background}]}\n          />\n        )}\n      </View>\n      <View style={styles.content}>\n        <Headline>\n          {user.displayName ? user.displayName : user.email}{' '}\n          {user.emailVerified && (\n            <Icon name=\"check-decagram\" color=\"#2196f3\" size={26} />\n          )}\n        </Headline>\n        {!!user.displayName && <Title>{user.email}</Title>}\n        {!!user.phoneNumber && <Subheading>{user.phoneNumber}</Subheading>}\n        {!!user.metadata.lastSignInTime && (\n          <Caption>\n            {`${appSettings.t('profileLastSignIn')}: ${dayjs(\n              user.metadata.lastSignInTime,\n            )\n              .locale(\n                appSettings.languageLocale?.languageTag ??\n                  fallbackLanguageLocale.languageTag,\n              )\n              .format()}`}\n          </Caption>\n        )}\n      </View>\n      <View style={[styles.providers, {backgroundColor: theme.colors.surface}]}>\n        <Provider type=\"password\" active={providers.includes('password')} />\n        <Provider type=\"facebook\" active={providers.includes('facebook.com')} />\n        <Provider type=\"google\" active={providers.includes('google.com')} />\n        <Provider type=\"phone\" active={providers.includes('phone')} />\n      </View>\n      <FAB\n        style={[styles.fab, {backgroundColor: theme.colors.primary}]}\n        icon=\"account-settings\"\n        onPress={() => linkTo('/profile/edit')}\n      />\n\n      <View style={styles.center}>\n        {Platform.OS !== 'web' && <Facebook />}\n        {Platform.OS !== 'web' && <Google />}\n        {Platform.OS !== 'web' && <Apple />}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative',\n  },\n  content: {\n    paddingHorizontal: 20,\n  },\n  profile: {\n    marginTop: -50,\n    paddingVertical: 10,\n  },\n  avatar: {\n    borderWidth: 5,\n    elevation: 4,\n  },\n  providers: {\n    elevation: 4,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    marginVertical: 30,\n    padding: 20,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  center: {\n    width: '100%',\n    alignItems: 'center',\n  },\n});\n\nexport default Profile;\n","import {StyleSheet, View, ViewStyle} from 'react-native';\nimport {useTheme} from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\ninterface Props {\n  type: string;\n  active: boolean;\n  style?: ViewStyle;\n}\n\nconst providerMap: {[key: string]: string} = {\n  password: 'email-lock',\n  facebook: 'facebook',\n  google: 'google',\n  phone: 'phone',\n};\n\nfunction Provider({type, active, style}: Props): JSX.Element | null {\n  const theme = useTheme();\n  const icon = providerMap[type];\n\n  if (!icon) {\n    return null;\n  }\n\n  return (\n    <View style={[style, styles[active ? 'active' : 'inactive']]}>\n      <Icon\n        name={icon}\n        size={24}\n        color={active ? theme.colors.primary : theme.colors.onSurface}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactive: {\n    opacity: 0.3,\n  },\n  active: {\n    opacity: 1,\n  },\n});\n\nexport default Provider;\n","import {AccessToken} from 'react-native-fbsdk-next';\n\nexport class LoginManager {\n  async getCurrentAccessToken(): Promise<AccessToken | null> {\n    console.log('facebook trying to get current access token');\n    return null;\n  }\n  logOut(): void {\n    console.log('facebook trying to logOut');\n    return;\n  }\n}\n","export default class appleAuth {\n  // foo\n}\n\nexport class AppleButton {\n  /* foo */\n}\n\nexport enum AppleRequestOperation /* foo */ {}\n\nexport enum AppleRequestScope /* foo */ {}\n","import {useEffect, useState} from 'react';\nimport {ScrollView, StyleSheet, View} from 'react-native';\nimport auth from '@react-native-firebase/auth';\nimport {GoogleSignin} from '@react-native-google-signin/google-signin';\nimport {\n  Banner,\n  Button,\n  Divider,\n  HelperText,\n  Paragraph,\n  TextInput,\n  Title,\n  useTheme,\n} from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport {useAlerts} from 'react-native-paper-alerts';\n\nimport {useAppSettings} from '../components/AppSettings';\n\nfunction EditProfile(): JSX.Element | null {\n  const user = auth().currentUser;\n  const theme = useTheme();\n  const appSettings = useAppSettings();\n  const Alert = useAlerts();\n\n  const [signingOut, setSigningOut] = useState(false);\n  const [savingName, setSavingName] = useState(false);\n  const [displayName, setDisplayName] = useState(\n    user ? user.displayName || '' : '',\n  );\n  const [help, setHelp] = useState<string>('');\n  const [savingPassword, setSavingPassword] = useState(false);\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [updatingUser, setUpdatingUser] = useState(false);\n\n  useEffect(() => {\n    if (newPassword === confirmPassword) {\n      setHelp('');\n    } else if (\n      newPassword &&\n      confirmPassword &&\n      newPassword !== confirmPassword\n    ) {\n      setHelp(appSettings.t('passwordsDoNotMatch'));\n    }\n  }, [newPassword, confirmPassword, appSettings]);\n\n  async function signOut() {\n    setSigningOut(true);\n    await GoogleSignin.signOut();\n    await auth().signOut();\n  }\n\n  async function handleDisplayName() {\n    if (!user) {\n      return;\n    }\n\n    if (!savingName) {\n      try {\n        setSavingName(true);\n        await user.updateProfile({\n          displayName,\n        });\n        Alert.alert(\n          appSettings.t('userNameDisplayUpdatedTitle'),\n          appSettings.t('userNameDisplayUpdateMessage'),\n          [{text: appSettings.t('OK')}],\n        );\n        await user.reload();\n      } catch (e) {\n        Alert.alert(appSettings.t('userUpdateError'), (e as Error).message, [\n          {text: appSettings.t('OK')},\n        ]);\n      } finally {\n        setSavingName(false);\n      }\n    }\n  }\n\n  async function updateEmailVerifyStatus() {\n    if (!user || updatingUser) {\n      return;\n    }\n\n    // we will assume success, and only change text on fail or error\n    let dialogText = appSettings.t('userEmailVerificationSuccess');\n    try {\n      setUpdatingUser(true);\n\n      await user.reload();\n      if (!auth().currentUser?.emailVerified) {\n        dialogText = appSettings.t('userEmailVerificationFailure');\n      }\n    } catch (e) {\n      dialogText =\n        appSettings.t('userEmailVerificationFailure') +\n        ': ' +\n        (e as Error).message;\n    } finally {\n      Alert.alert(appSettings.t('userEmailVerifyTitle'), dialogText, [\n        {\n          text: appSettings.t('OK'),\n        },\n      ]);\n      setUpdatingUser(false);\n    }\n  }\n\n  async function handlePassword() {\n    if (!user || !user.email) {\n      return;\n    }\n    if (!savingPassword) {\n      try {\n        setSavingPassword(true);\n        await auth().signInWithEmailAndPassword(user.email, currentPassword);\n        await user.updatePassword(newPassword);\n        Alert.alert(\n          appSettings.t('change-password-successful'),\n          appSettings.t('change-password-successful-message'),\n          [\n            {\n              text: appSettings.t('OK'),\n              // @ts-ignore FIXME type the navigator\n              onPress: async () => await signOut(),\n            },\n          ],\n        );\n      } catch (e) {\n        Alert.alert(\n          appSettings.t('userUpdateError'),\n          appSettings.t('change-password-error'),\n          [{text: appSettings.t('OK')}],\n        );\n      } finally {\n        setSavingPassword(false);\n      }\n    }\n  }\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <ScrollView\n      style={[styles.container, {backgroundColor: theme.colors.background}]}>\n      <Banner\n        visible={!user.emailVerified}\n        actions={[\n          {\n            label: appSettings.t('userEmailVerificationVerifyButton'),\n            onPress: () => {\n              updateEmailVerifyStatus();\n            },\n          },\n          {\n            label: appSettings.t('userEmailVerify'),\n            onPress: () => {\n              user\n                .sendEmailVerification()\n                .then(() =>\n                  Alert.alert(\n                    appSettings.t('userEmailVerification'),\n                    appSettings.t('userEmailVerificationInstructions1') +\n                      ' \"' +\n                      user.email +\n                      '\". ' +\n                      appSettings.t('userEmailVerificationInstructions2') +\n                      '.',\n                    [{text: appSettings.t('OK')}],\n                  ),\n                );\n            },\n          },\n        ]}\n        icon={({size}) => (\n          <Icon name=\"alert-decagram\" size={size} color=\"#f44336\" />\n        )}>\n        {appSettings.t('userEmailVerificationBanner')}\n      </Banner>\n      <View style={styles.content}>\n        <Title>{appSettings.t('userNameDisplayLabel')}</Title>\n        <Paragraph>{appSettings.t('userNameDisplayInstructions')}</Paragraph>\n        <TextInput\n          style={styles.input}\n          mode=\"outlined\"\n          label={appSettings.t('userNameDisplayLabel')}\n          value={displayName}\n          onChangeText={setDisplayName}\n          autoComplete=\"name\"\n        />\n        <Button\n          mode=\"contained\"\n          disabled={!displayName}\n          loading={savingName}\n          onPress={handleDisplayName}\n          style={styles.button}>\n          {appSettings.t('userNameDisplaySave')}\n        </Button>\n      </View>\n      <Divider style={styles.divider} />\n      <View style={styles.content}>\n        <Title>{appSettings.t('userPasswordUpdateLabel')}</Title>\n        <Paragraph>{appSettings.t('userPasswordInstructions')}</Paragraph>\n        <TextInput\n          secureTextEntry\n          style={styles.input}\n          mode=\"outlined\"\n          label={appSettings.t('userPasswordCurrent')}\n          value={currentPassword}\n          onChangeText={setCurrentPassword}\n          autoComplete=\"password\"\n        />\n        <TextInput\n          secureTextEntry\n          style={styles.input}\n          mode=\"outlined\"\n          label={appSettings.t('userPasswordNew')}\n          value={newPassword}\n          onChangeText={setNewPassword}\n          autoComplete=\"password\"\n        />\n        <TextInput\n          secureTextEntry\n          style={styles.input}\n          mode=\"outlined\"\n          label={appSettings.t('userPasswordConfirm')}\n          value={confirmPassword}\n          onChangeText={setConfirmPassword}\n          autoComplete=\"password\"\n        />\n        <HelperText type=\"error\" visible={!!help}>\n          {help}\n        </HelperText>\n        <Button\n          disabled={\n            !currentPassword ||\n            !newPassword ||\n            !confirmPassword ||\n            newPassword !== confirmPassword\n          }\n          mode=\"contained\"\n          style={styles.button}\n          loading={savingPassword}\n          onPress={handlePassword}>\n          {appSettings.t('userPasswordUpdate')}\n        </Button>\n      </View>\n      <Divider style={styles.divider} />\n      <View style={[styles.content]}>\n        <Button\n          mode=\"contained\"\n          loading={signingOut}\n          onPress={() => (signingOut ? null : signOut())}\n          style={[styles.button, styles.maxWidth]}>\n          {appSettings.t('userSignOut')}\n        </Button>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  maxWidth: {\n    width: '100%',\n  },\n  content: {\n    padding: 16,\n  },\n  input: {\n    marginTop: 20,\n  },\n  button: {\n    alignSelf: 'center',\n    marginVertical: 20,\n  },\n  divider: {\n    height: 4,\n  },\n});\n\nexport default EditProfile;\n","import {createStackNavigator} from '@react-navigation/stack';\n\nimport {useAppSettings} from '../components/AppSettings';\nimport CreateAccount from './CreateAccount';\nimport ForgotPassword from './ForgotPassword';\nimport PhoneSignIn from './PhoneSignIn';\nimport SignIn from './SignIn';\nimport {NotFound} from '../components/NotFound';\nconst Stack = createStackNavigator();\n\nfunction SignedOutStack() {\n  const appSettings = useAppSettings();\n  return (\n    <Stack.Navigator initialRouteName=\"home\">\n      <Stack.Screen\n        name=\"SignIn\"\n        component={SignIn}\n        options={{headerShown: false, title: appSettings.t('signIn')}}\n      />\n      <Stack.Screen\n        name=\"CreateAccount\"\n        options={{title: appSettings.t('createAnAccount')}}\n        component={CreateAccount}\n      />\n      <Stack.Screen\n        name=\"ForgotPassword\"\n        component={ForgotPassword}\n        options={{title: appSettings.t('forgotPassword')}}\n      />\n      <Stack.Screen\n        name=\"PhoneSignIn\"\n        component={PhoneSignIn}\n        options={{title: appSettings.t('phoneSignInTitle')}}\n      />\n      <Stack.Screen\n        name=\"NotFound\"\n        component={NotFound}\n        options={{title: appSettings.t('NotFound')}}\n      />\n    </Stack.Navigator>\n  );\n}\n\nexport default SignedOutStack;\n","import {useEffect, useState} from 'react';\nimport {ScrollView, StyleSheet} from 'react-native';\nimport {\n  Button,\n  HelperText,\n  Paragraph,\n  TextInput,\n  useTheme,\n} from 'react-native-paper';\nimport auth, {FirebaseAuthTypes} from '@react-native-firebase/auth';\nimport {useAlerts} from 'react-native-paper-alerts';\n\nimport {useAppSettings} from '../components/AppSettings';\n\nfunction CreateAccount(): JSX.Element {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [confirm, setConfirm] = useState<string>('');\n  const Alert = useAlerts();\n\n  const [help, setHelp] = useState<string>('');\n  const theme = useTheme();\n  const appSettings = useAppSettings();\n\n  useEffect(() => {\n    if (password === confirm) {\n      setHelp('');\n    } else if (password && confirm && password !== confirm) {\n      setHelp(appSettings.t('passwordsDoNotMatch'));\n    }\n  }, [password, confirm, appSettings]);\n\n  async function handleCreate() {\n    try {\n      setLoading(true);\n      const credential = await auth().createUserWithEmailAndPassword(\n        email,\n        password,\n      );\n      credential.user.sendEmailVerification();\n    } catch (e) {\n      setLoading(false);\n      const error = e as FirebaseAuthTypes.PhoneAuthError;\n      Alert.alert(\n        appSettings.t('createAccountError'),\n        appSettings.t(error.code ?? 'unknownError'),\n        [{text: appSettings.t('OK')}],\n      );\n    }\n  }\n\n  return (\n    <ScrollView\n      style={[styles.container, {backgroundColor: theme.colors.background}]}>\n      <Paragraph>{appSettings.t('createAccountInstructions')}</Paragraph>\n      <TextInput\n        style={styles.input}\n        mode=\"outlined\"\n        label={appSettings.t('emailLabel')}\n        value={email}\n        onChangeText={setEmail}\n        keyboardType=\"email-address\"\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        autoComplete=\"email\"\n        autoFocus={true}\n      />\n      <TextInput\n        secureTextEntry\n        style={styles.input}\n        mode=\"outlined\"\n        label={appSettings.t('passwordLabel')}\n        value={password}\n        onChangeText={setPassword}\n        autoComplete=\"password\"\n      />\n      <TextInput\n        secureTextEntry\n        style={styles.input}\n        mode=\"outlined\"\n        label={appSettings.t('createAccountPasswordConfirmLabel')}\n        value={confirm}\n        error={!!confirm && password !== confirm}\n        onChangeText={setConfirm}\n        autoComplete=\"password\"\n      />\n      <HelperText type=\"error\" visible={!!help}>\n        {help}\n      </HelperText>\n      <Button\n        loading={loading}\n        mode=\"contained\"\n        disabled={!email || !password || !confirm || !!help}\n        onPress={() => (loading ? null : handleCreate())}>\n        {loading\n          ? appSettings.t('createAccountCreating')\n          : appSettings.t('createAccountCreate')}\n      </Button>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  input: {\n    marginVertical: 10,\n  },\n});\n\nexport default CreateAccount;\n","import {useState} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport auth, {FirebaseAuthTypes} from '@react-native-firebase/auth';\nimport {Button, Paragraph, TextInput, useTheme} from 'react-native-paper';\nimport {useLinkTo} from '@react-navigation/native';\nimport {useAlerts} from 'react-native-paper-alerts';\n\nimport {useAppSettings} from '../components/AppSettings';\n\nfunction ForgotPassword(): JSX.Element {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [email, setEmail] = useState<string>('');\n  const theme = useTheme();\n  const appSettings = useAppSettings();\n  const Alert = useAlerts();\n  const linkTo = useLinkTo();\n\n  async function attemptReset() {\n    if (!email) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      await auth().sendPasswordResetEmail(email);\n      Alert.alert(\n        appSettings.t('change-password-email'),\n        appSettings.t('change-password-email-message'),\n        [\n          {\n            text: appSettings.t('OK'),\n            onPress: () => linkTo('/'),\n          },\n        ],\n      );\n    } catch (e) {\n      const error = e as FirebaseAuthTypes.PhoneAuthError;\n      Alert.alert(\n        appSettings.t('forgotPasswordError'),\n        appSettings.t(error.code ?? 'unknownError'),\n        [{text: appSettings.t('OK')}],\n      );\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <View\n      style={[styles.container, {backgroundColor: theme.colors.background}]}>\n      <Paragraph>{appSettings.t('forgotPasswordInstructions')}</Paragraph>\n      <TextInput\n        autoFocus={true}\n        value={email}\n        autoCapitalize={'none'}\n        style={styles.input}\n        mode=\"outlined\"\n        label={appSettings.t('forgotPasswordLabel')}\n        onChangeText={setEmail}\n        autoComplete=\"email\"\n      />\n      <Button\n        disabled={!email}\n        loading={loading}\n        mode=\"contained\"\n        onPress={() => (loading ? null : attemptReset())}>\n        {loading\n          ? appSettings.t('forgotPasswordSending')\n          : appSettings.t('forgotPasswordSend')}\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  input: {\n    marginVertical: 10,\n  },\n});\n\nexport default ForgotPassword;\n","import {StyleSheet, View} from 'react-native';\nimport {useTheme} from 'react-native-paper';\nimport Phone from '../auth-providers/Phone';\n\nfunction PhoneSignIn(): JSX.Element {\n  const theme = useTheme();\n  return (\n    <View style={[styles.container, {backgroundColor: theme.colors.backdrop}]}>\n      <Phone />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n});\n\nexport default PhoneSignIn;\n","import auth, {FirebaseAuthTypes} from '@react-native-firebase/auth';\nimport {\n  AsYouType,\n  CountryCode,\n  parsePhoneNumberFromString,\n} from 'libphonenumber-js';\nimport {Fragment, useRef, useState} from 'react';\nimport {StyleSheet} from 'react-native';\nimport CountryPicker, {Country} from 'react-native-country-picker-modal';\nimport {Button, Paragraph, TextInput, useTheme} from 'react-native-paper';\nimport {useAlerts} from 'react-native-paper-alerts';\n\nimport {useAppSettings} from '../components/AppSettings';\n\ntype ConfirmationRef =\n  | ((\n      verificationCode: string,\n    ) => Promise<FirebaseAuthTypes.UserCredential | null>)\n  | null;\n\nfunction Phone(): JSX.Element {\n  const [loading, setLoading] = useState(false);\n  const confirmationRef = useRef<ConfirmationRef>(null);\n  const [number, setNumber] = useState('+1 ');\n  const [verification, setVerification] = useState('');\n\n  const [countryCode, setCountryCode] = useState('US');\n  const [country, setCountry] = useState<Country>();\n  const [visible, setVisible] = useState<boolean>(false);\n\n  const theme = useTheme();\n  const appSettings = useAppSettings();\n  const Alert = useAlerts();\n\n  const onSelect = (newCountry: Country) => {\n    setCountryCode(newCountry.cca2);\n    setCountry(newCountry);\n    setNumber(`+${newCountry.callingCode[0]} `);\n  };\n\n  async function handlePhoneAuth() {\n    if (!loading && confirmationRef) {\n      setLoading(true);\n      try {\n        const result = await auth().signInWithPhoneNumber(number);\n        confirmationRef.current = result.confirm.bind(result);\n      } catch (e) {\n        setLoading(false);\n        confirmationRef.current = null;\n        const error = e as FirebaseAuthTypes.PhoneAuthError;\n        Alert.alert(\n          appSettings.t('phone-auth-error'),\n          appSettings.t(error.code ?? 'unknownError'),\n          [{text: appSettings.t('OK')}],\n        );\n      }\n    }\n  }\n\n  function handleNumber(text: string) {\n    const parsed = new AsYouType().input(text);\n    setNumber(parsed);\n  }\n\n  function isValid() {\n    const phoneNumber = parsePhoneNumberFromString(\n      number,\n      ((country && country.cca2) || 'US') as CountryCode,\n    );\n    if (phoneNumber) {\n      return phoneNumber.isValid();\n    }\n\n    return false;\n  }\n\n  async function handleVerification() {\n    if (!loading && confirmationRef.current) {\n      setLoading(true);\n      try {\n        await confirmationRef.current(verification);\n        confirmationRef.current = null;\n      } catch (e) {\n        const error = e as FirebaseAuthTypes.PhoneAuthError;\n        Alert.alert(\n          appSettings.t('phone-auth-error'),\n          appSettings.t(error.code ?? 'unknownError'),\n          [{text: appSettings.t('OK')}],\n        );\n      } finally {\n        setLoading(false);\n      }\n    }\n  }\n\n  return confirmationRef.current ? (\n    <Fragment>\n      <TextInput\n        keyboardType=\"number-pad\"\n        mode=\"outlined\"\n        label={appSettings.t('phoneVerificationCode')}\n        value={verification}\n        onChangeText={setVerification}\n        autoComplete=\"sms-otp\"\n      />\n\n      <Button\n        style={styles.submit}\n        loading={loading}\n        disabled={!verification}\n        mode=\"contained\"\n        onPress={handleVerification}>\n        {appSettings.t('phoneVerificationConfirm')}\n      </Button>\n    </Fragment>\n  ) : (\n    <Fragment>\n      <Paragraph style={styles.paragraph}>\n        {appSettings.t('phoneVerificationCountryInstructions')}\n      </Paragraph>\n      <CountryPicker\n        containerButtonStyle={styles.phoneCountry}\n        theme={{\n          primaryColor: theme.colors.surface,\n          primaryColorVariant: theme.colors.surface,\n          backgroundColor: theme.colors.background,\n          onBackgroundTextColor: theme.colors.onSurface,\n        }}\n        // @ts-ignore\n        countryCode={countryCode}\n        {...{\n          excludeCountries: ['AQ'],\n          onSelect,\n          withFlag: true,\n          withCountryNameButton: true,\n          withCallingCode: true,\n          preferredCountries: ['US', 'GB'],\n          modalProps: {\n            visible,\n          },\n          onClose: () => setVisible(false),\n          onOpen: () => setVisible(true),\n        }}\n      />\n\n      <Paragraph style={styles.paragraph}>\n        {appSettings.t('phoneVerificationNumberInstructions')}\n      </Paragraph>\n      <TextInput\n        keyboardType=\"number-pad\"\n        mode=\"outlined\"\n        label={appSettings.t('phoneVerificationNumberLabel')}\n        value={number}\n        onChangeText={handleNumber}\n        autoComplete=\"tel\"\n      />\n\n      <Button\n        style={styles.submit}\n        loading={loading}\n        disabled={!isValid()}\n        mode=\"contained\"\n        onPress={handlePhoneAuth}>\n        {appSettings.t('phoneVerificationNumberSubmit')}\n      </Button>\n    </Fragment>\n  );\n}\n\nconst styles = StyleSheet.create({\n  phoneCountry: {\n    flexDirection: 'row',\n    position: 'relative',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 3,\n    padding: 13,\n  },\n  phoneCountryCode: {\n    marginTop: 5,\n    marginLeft: 5,\n  },\n  paragraph: {\n    marginBottom: 5,\n  },\n  button: {\n    marginBottom: 20,\n  },\n  picker: {\n    height: 0,\n    opacity: 0,\n  },\n  submit: {\n    marginTop: 20,\n  },\n});\n\nexport default Phone;\n","import {Fragment} from 'react';\nimport {Platform, StyleSheet, View} from 'react-native';\nimport {Button, useTheme} from 'react-native-paper';\nimport {useLinkTo} from '@react-navigation/native';\nimport Hero from '../components/Hero';\nimport ProviderButton from '../components/AuthProviderButton';\nimport EmailPassword from '../auth-providers/EmailPassword';\nimport Facebook from '../auth-providers/Facebook';\nimport Google from '../auth-providers/Google';\nimport Apple from '../auth-providers/Apple';\nimport {useAppSettings} from '../components/AppSettings';\n\nfunction SignIn() {\n  const theme = useTheme();\n  const appSettings = useAppSettings();\n  const linkTo = useLinkTo();\n\n  return (\n    <Fragment>\n      <Hero\n        height={300}\n        image={\n          'https://images.unsplash.com/photo-1555099962-4199c345e5dd?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80'\n        }>\n        <EmailPassword />\n      </Hero>\n\n      <View style={styles.center}>\n        <Button\n          color=\"#9e9e9e\"\n          onPress={() => {\n            linkTo('/account/password/forgot');\n          }}\n          style={styles.button}>\n          {appSettings.t('forgotPassword')}\n        </Button>\n        <Button\n          mode=\"contained\"\n          icon=\"plus\"\n          onPress={() => {\n            linkTo('/account/create');\n          }}\n          style={styles.button}>\n          {appSettings.t('createAnAccount')}\n        </Button>\n\n        <View\n          style={[styles.divider, {backgroundColor: theme.colors.primary}]}\n        />\n\n        {Platform.OS !== 'web' && <Facebook />}\n        {Platform.OS !== 'web' && <Google />}\n        {Platform.OS !== 'web' && <Apple />}\n        <ProviderButton\n          type=\"phone\"\n          onPress={() => {\n            linkTo('/account/phone/login');\n          }}>\n          {appSettings.t('phoneSignIn')}\n        </ProviderButton>\n      </View>\n    </Fragment>\n  );\n}\n\nconst styles = StyleSheet.create({\n  center: {\n    alignItems: 'center',\n  },\n  fab: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    elevation: 6,\n    marginTop: -25,\n  },\n  button: {\n    marginVertical: 5,\n    width: 300,\n  },\n  divider: {\n    width: 300,\n    marginVertical: 20,\n    height: StyleSheet.hairlineWidth,\n  },\n});\n\nexport default SignIn;\n","import {useState} from 'react';\nimport {Image, StyleSheet, View} from 'react-native';\nimport {Button, TextInput, useTheme} from 'react-native-paper';\nimport auth, {FirebaseAuthTypes} from '@react-native-firebase/auth';\nimport {useAlerts} from 'react-native-paper-alerts';\n\nimport {useAppSettings} from '../components/AppSettings';\n\nfunction EmailPassword(): JSX.Element {\n  const [loading, setLoading] = useState(false);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const theme = useTheme();\n  const appSettings = useAppSettings();\n  const Alert = useAlerts();\n\n  async function attemptSignIn() {\n    if (!email || !password) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      await auth().signInWithEmailAndPassword(email, password);\n    } catch (e) {\n      setLoading(false);\n      const error = e as FirebaseAuthTypes.PhoneAuthError;\n      Alert.alert(\n        appSettings.t('login-error'),\n        appSettings.t(error.code ?? 'unknownError'),\n        [{text: appSettings.t('OK')}],\n      );\n    }\n  }\n\n  const styles = StyleSheet.create({\n    signinButton: {\n      alignSelf: 'center',\n      backgroundColor: theme.colors.primary,\n      width: 300,\n    },\n    icon: {\n      alignSelf: 'center',\n      padding: 10,\n      width: 65,\n      height: 65,\n    },\n    form: {\n      flex: 1,\n      padding: 20,\n      textAlign: 'center',\n      justifyContent: 'center',\n      alignSelf: 'stretch',\n    },\n    button: {\n      marginVertical: 20,\n    },\n  });\n\n  const maskTheme = {\n    ...theme,\n    colors: {\n      background: 'transparent',\n      // primary: theme.colors.text,\n      placeholder: theme.colors.accent,\n      accent: theme.colors.background,\n      text: theme.colors.accent,\n    },\n  };\n\n  return (\n    <View style={styles.form}>\n      <Image\n        style={styles.icon}\n        source={{\n          uri: 'https://storage.googleapis.com/static.invertase.io/assets/React-Native-Firebase.png',\n        }}\n      />\n      <TextInput\n        value={email}\n        label={appSettings.t('emailLabel')}\n        theme={maskTheme}\n        onChangeText={setEmail}\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        keyboardType=\"email-address\"\n        autoComplete=\"email\"\n      />\n      <TextInput\n        autoCapitalize=\"none\"\n        secureTextEntry\n        value={password}\n        label={appSettings.t('passwordLabel')}\n        theme={maskTheme}\n        onChangeText={setPassword}\n        autoComplete=\"password\"\n      />\n      <Button\n        disabled={loading || !email || !password}\n        style={[styles.button, styles.signinButton]}\n        icon=\"lock\"\n        mode={loading ? 'text' : 'contained'}\n        onPress={() => (loading ? null : attemptSignIn())}\n        loading={loading}>\n        {loading\n          ? appSettings.t('signInSigningIn')\n          : appSettings.t('signInSignIn')}\n      </Button>\n    </View>\n  );\n}\n\nexport default EmailPassword;\n","import AntDesign_ttf from 'react-native-vector-icons/Fonts/AntDesign.ttf';\nimport Entypo_ttf from 'react-native-vector-icons/Fonts/Entypo.ttf';\nimport EvilIcons_ttf from 'react-native-vector-icons/Fonts/EvilIcons.ttf';\nimport Feather_ttf from 'react-native-vector-icons/Fonts/Feather.ttf';\nimport FontAwesome_ttf from 'react-native-vector-icons/Fonts/FontAwesome.ttf';\nimport Fontisto_ttf from 'react-native-vector-icons/Fonts/Fontisto.ttf';\nimport Foundation_ttf from 'react-native-vector-icons/Fonts/Foundation.ttf';\nimport Ionicons_ttf from 'react-native-vector-icons/Fonts/Ionicons.ttf';\nimport MaterialIcons_ttf from 'react-native-vector-icons/Fonts/MaterialIcons.ttf';\nimport MaterialCommunityIcons_ttf from 'react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf';\nimport Octicons_ttf from 'react-native-vector-icons/Fonts/Octicons.ttf';\nimport Zocial_ttf from 'react-native-vector-icons/Fonts/Zocial.ttf';\nimport SimpleLineIcons_ttf from 'react-native-vector-icons/Fonts/SimpleLineIcons.ttf';\n\nconst IconsCSS = `\n@font-face {\n  src: url(${AntDesign_ttf});\n  font-family: AntDesign;\n}\n@font-face {\n  src: url(${Entypo_ttf});\n  font-family: Entypo;\n}\n@font-face {\n  src: url(${EvilIcons_ttf});\n  font-family: EvilIcons;\n}\n@font-face {\n  src: url(${Feather_ttf});\n  font-family: Feather;\n}\n@font-face {\n  src: url(${FontAwesome_ttf});\n  font-family: FontAwesome;\n}\n@font-face {\n  src: url(${Fontisto_ttf});\n  font-family: Fontisto;\n}\n@font-face {\n  src: url(${Foundation_ttf});\n  font-family: Foundation;\n}\n@font-face {\n  src: url(${Ionicons_ttf});\n  font-family: Ionicons;\n}\n@font-face {\n  src: url(${MaterialIcons_ttf});\n  font-family: Materialicons;\n}\n@font-face {\n  src: url(${MaterialCommunityIcons_ttf});\n  font-family: MaterialCommunityIcons;\n}\n@font-face {\n  src: url(${Octicons_ttf});\n  font-family: Octicons;\n}\n@font-face {\n  src: url(${Zocial_ttf});\n  font-family: Zocial;\n}\n@font-face {\n  src: url(${SimpleLineIcons_ttf});\n  font-family: SimpleLineIcons;\n}\n`;\n\nconst style = document.createElement('style');\nstyle.type = 'text/css';\nif (style.styleSheet) {\n  style.styleSheet.cssText = IconsCSS;\n} else {\n  style.appendChild(document.createTextNode(IconsCSS));\n}\n\ndocument.head.appendChild(style);\n","import appJson from '../app.json';\nimport {StyleSheet, View} from 'react-native';\nimport {createContext, Fragment, ReactNode, useEffect, useState} from 'react';\nimport auth, {FirebaseAuthTypes} from '@react-native-firebase/auth';\nimport {\n  Headline,\n  ActivityIndicator,\n  Provider as PaperProvider,\n} from 'react-native-paper';\nimport SignedInStack from './signed-in/Stack';\nimport SignedOutStack from './signed-out/Stack';\nimport {\n  initialWindowMetrics,\n  SafeAreaProvider,\n} from 'react-native-safe-area-context';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {useAppSettings} from './components/AppSettings';\nimport {AlertsProvider} from 'react-native-paper-alerts';\n\n/**\n * Types\n */\ntype User = FirebaseAuthTypes.User | null;\n\n/**\n * Contexts\n */\nexport const UserContext = createContext<User>(null);\n\nfunction App(): JSX.Element {\n  const [initializing, setInitializing] = useState(true);\n  const [listenUser, setListenUser] = useState(false);\n  const [user, setUser] = useState<User>(null);\n  const appSettings = useAppSettings();\n\n  /** Listen for auth state changes */\n  useEffect(() => {\n    const authListener = auth().onAuthStateChanged(result => {\n      setUser(result);\n      if (initializing && !listenUser) {\n        setInitializing(false);\n        setListenUser(true);\n      }\n    });\n\n    return () => {\n      if (authListener) {\n        authListener();\n      }\n    };\n  }, [initializing, listenUser]);\n\n  /** Listen for user changes */\n  useEffect(() => {\n    let userListener: () => void;\n\n    if (listenUser) {\n      // TODO @react-native-firebase/auth provides `onUserChanged` which is this and more.\n      // what else can we add and still be web-compatible?\n      userListener = auth().onIdTokenChanged(result => {\n        setUser(result);\n      });\n    }\n\n    return () => {\n      if (userListener) {\n        userListener();\n      }\n    };\n  }, [listenUser]);\n\n  if (initializing) {\n    let waiting = true;\n    setTimeout(() => {\n      waiting = false;\n    }, 1000);\n\n    return (\n      <View\n        style={[\n          styles.loadingContainer,\n          {backgroundColor: appSettings.currentTheme.colors.background},\n        ]}>\n        {!waiting && (\n          <Fragment>\n            <Headline\n              style={[\n                styles.padded,\n                {color: appSettings.currentTheme.colors.text},\n              ]}>\n              {appSettings.t('loading')}...\n            </Headline>\n            <ActivityIndicator\n              size={'large'}\n              theme={{\n                ...appSettings.currentTheme,\n                colors: {primary: appSettings.currentTheme.colors.accent},\n              }}\n            />\n          </Fragment>\n        )}\n      </View>\n    );\n  }\n\n  function container(children: ReactNode | ReactNode[]) {\n    return (\n      <SafeAreaProvider initialMetrics={initialWindowMetrics}>\n        <PaperProvider theme={appSettings.currentTheme}>\n          <AlertsProvider>\n            <NavigationContainer\n              linking={{\n                prefixes: [\n                  'invertase.github.io/react-native-firebase-authentication-example',\n                  'localhost',\n                ],\n                config: {\n                  screens: {\n                    // Our signed-out stack has these:\n                    SignIn: '',\n                    CreateAccount: 'account/create',\n                    ForgotPassword: 'account/password/forgot',\n                    PhoneSignIn: 'account/phone/login',\n                    // Used as catch-all - there is a \"Home\" in signed-in and signed-out stacks!\n                    NotFound: '*',\n\n                    Details: 'details', // included from Luna template app\n                    User: 'user',\n                    UserProfile: 'profile',\n                    UserSettings: 'profile/edit',\n                  },\n                },\n              }}\n              documentTitle={{\n                formatter: (options, route) =>\n                  `${appJson.displayName}${\n                    options?.title || route?.name\n                      ? ' - ' + options?.title ?? route?.name\n                      : ' '\n                  }`,\n              }}\n              theme={appSettings.currentTheme}>\n              {children}\n            </NavigationContainer>\n          </AlertsProvider>\n        </PaperProvider>\n      </SafeAreaProvider>\n    );\n  }\n\n  return container(\n    user ? (\n      <UserContext.Provider value={user}>\n        <SignedInStack />\n      </UserContext.Provider>\n    ) : (\n      <SignedOutStack />\n    ),\n  );\n}\n\nconst styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignContent: 'center',\n    // alignSelf: 'center',\n    alignItems: 'center',\n    // textAlignVertical: true,\n  },\n  padded: {\n    padding: 40,\n  },\n});\n\nexport default App;\n"],"sourceRoot":""}